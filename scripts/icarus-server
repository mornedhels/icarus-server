#!/bin/bash
. "$(dirname "$0")/common"
. "$(dirname "$0")/defaults"

icarus_server_pid=-1
timeout=60
kill_signal=TERM

cd "$install_path" || fatal "Could not cd $install_path"
icarus_server="$install_path/$icarus_binary_path"

main() {
  wait_for_server_download
  run_server
}

wait_for_server_download() {
  while :; do
    if [ -f "$icarus_server" ]; then
      break
    else
      debug "icarus Server is not yet downloaded - waiting"
      sleep 7
    fi
  done
}

run_server() {
  info "Running icarus-server"
  debug "Server config -SteamServerName=$SERVER_NAME -PORT=$SERVER_PORT -QueryPort=$SERVER_QUERYPORT"

  chmod +x "$icarus_server"
  wine64 "$icarus_server" -Log -UserDir='C:\icarus' -SteamServerName="$SERVER_NAME" -PORT="$SERVER_PORT" -QueryPort="$SERVER_QUERYPORT" &
  icarus_server_pid=$!
  echo $icarus_server_pid >"$icarus_server_pidfile"

  wait $icarus_server_pid
  debug "icarus-server with PID $icarus_server_pid stopped"

  cleanup
  info "Shutdown complete"
  exit 0
}

cleanup() {
  clear_lock "$icarus_server_pidfile"
}

shutdown() {
  debug "Received signal to shut down icarus-server"
  if [ $icarus_server_pid -eq -1 ]; then
    debug "icarus server is not running yet - aborting startup"
    exit
  fi
  info "Shutting down icarus server with PID $icarus_server_pid"
  kill -TERM $icarus_server_pid
  shutdown_timeout=$(($(date +%s) + timeout))
  while [ -d "/proc/$icarus_server_pid" ]; do
    if [ "$(date +%s)" -gt $shutdown_timeout ]; then
      shutdown_timeout=$(($(date +%s) + timeout))
      warn "Timeout while waiting for server to shut down - sending SIG$kill_signal to PID $icarus_server_pid"
      kill -$kill_signal $icarus_server_pid
      case "$kill_signal" in
      INT)
        kill_signal=TERM
        ;;
      *)
        kill_signal=KILL
        ;;
      esac
    fi
    debug "Waiting for icarus Server with PID $icarus_server_pid to shut down"
    sleep 6
  done
}

trap shutdown SIGINT SIGTERM
main
